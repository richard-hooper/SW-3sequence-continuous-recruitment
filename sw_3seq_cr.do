mata: mata set matastrict on

*** Define a Mata function for calculating the 
*** variance of the treatment effect estimator from
*** a stepped wedge trial with continuous recruitment 
*** and time effect modelled as step changes aligned
*** with the cross-overs. The calculation uses 
*** methods for generalised least squares estimation. 
*** The design of sequences is passed to the function 
*** in the matrix `seq'. Each column in `seq' 
*** represents an individual arriving at each  
*** cluster, and each row in `seq' represents a  
*** different randomised sequence. The control  
*** condition is coded as `0' and the intervention  
*** condition is coded as `1'. Clusters are assumed 
*** to be allocated to sequences with weights given 
*** by the vector `weight'. The value returned by the 
*** function gives the variance as a multiple of 
*** sigma^2/J, where sigma^2 is the outcome variance 
*** and J is the number of clusters, whatever those
*** are. See the end of the code for an example of a
*** call to the function.
		
mata:
real scalar glsvar_swcr(real matrix seq,  ///
	real colvector weight, real scalar rho,  ///
	real scalar tau)
{
	real matrix x, y, x1, y1, ccom
	real colvector t
	real scalar m, nseq, i, j, var

	m = cols(seq)
	nseq = rows(seq)

	if (rowmin  ///
		(colmin((seq :== 0) :| (seq :== 1)))  ///
		< 1) {
		"Sequences must be coded with 0s and 1s only"
		return (-1)
		}
	
	y = J(2+nseq, 0, .)
	x = J(0, 2+nseq, .)

	t = (1 :: m) :/ m :- 0.5
	ccom = rho :* (J(m, m, tau) :^ abs  ///
		(J(m, 1, t') - J(1, m, t)))  ///
		+ (1-rho) :* I(m)
	weight = weight :/ colsum(weight)
		
	for (i=1; i<=nseq; i++) {
		x1 = (seq[i,.]', J(m, 1, 1), seq')
		y1 = x1' * invsym(ccom) :* weight[i]
		x = x \ x1
		y = y , y1
	}

	var = invsym(y*x)[1,1]
	return(var)
}
end

*** Define a Mata function that calculates variances 
*** of the treatment effect estimator for 
*** centrosymmetric three-sequence designs with
*** different times for the first cross-over and
*** different weights for the middle sequence (for
*** given parameters m, rho and tau), and stores 
*** these variances in a matrix of results with the
*** name `st_matname'. This matrix is also returned 
*** by the function. The matrix can be used e.g. to
*** draw a contour plot of the variance for different 
*** designs. By specifying the dimensions of the 
*** results matrix (nj x nk) the user can set the
*** spacing of the grid of values over the design
*** space at which variances are calculated.

mata:
real matrix swcr_3seq_makemat  ///
	(real scalar m,  ///
	real scalar rho, real scalar tau,  ///
	real scalar nj, real scalar nk,  ///
	string scalar st_matname)
{
	real matrix varplot, seq
	real scalar j, k, step1
	
	varplot = J(nj*nk, 3, .)
	
	for (j=0; j<nj; j++) {
		step1 = floor(0.5*(m*j/nj+1))
		seq = ((J(1, step1, 0), J(1, m-step1, 1))  ///
			\ (J(1, m/2, 0), J(1, m/2, 1)) ///
			\ (J(1, m-step1, 0), J(1, step1, 1)))
		for (k=0; k<nk; k++) {
			varplot[1+nk*j+k,.] = (0.5*j/nj, k/nk,  ///
				glsvar_swcr(seq,  ///
				((1-k/nk)/2 \ k/nk \ (1-k/nk)/2),  ///
				rho, tau))
		}
	}

	st_matrix(st_matname, varplot)
	return(varplot)
}
end



*** Example of Stata code for plotting the contour 
*** graph in a given scenario. (NB the graphs in the
*** paper were plotted in R, but still using a matrix
*** generated by the Mata function swcr_3seq_makemat,
*** above)
		
capture net install gr0002_2
set scheme lean1

local mrho = 0.5
local m = 200
local nj = 100
local nk = 100
local tau = 0.5

local rho = `mrho' / `m'
mata: contour_data = swcr_3seq_makemat(`m',  ///
	`rho', `tau', `nj', `nk', "contour_data")

clear
svmat contour_data, names("var")
gen z = ln(var3)/ln(1.1)
label var var1 "s"
label var var2 "w"
		
quietly summ z
local mincut=r(min)

graph twoway contourline z var2 var1,  ///
	ccuts(`mincut'(1)`=`mincut'+20')  ///
	xlabel(, labsize(large))  ///
	ylabel(, labsize(large))  ///
	xtitle(, size(huge)) ytitle(, size(huge))

}


*** Example of a call to the Mata function 
*** glsvar_swcr. This is for the PATHWEIGH example
*** (see manuscript): three-sequence centrosymmetric
*** design, 120 participants recruited over the
*** duration of the trial from each cluster, first
*** cross-over after 10 participants, equal weights
*** (1:1:1) for each sequence, rho=0.02, tau=0.5.

mata: glsvar_swcr(  ///
	((J(1,10,0), J(1,110,1)) \  ///
	(J(1,60,0), J(1,60,1)) \  ///
	(J(1,110,0), J(1,10,1))),  ///
	(1,1,1)', 0.02, 0.5)
